generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Game {
  id         Int        @id @default(autoincrement())
  gameStatus GameStatus
  password   String
  teams      Team[]
  topics     Topic[]
}

model Topic {
  id          Int           @id @default(autoincrement())
  name        String
  gameId      Int?
  questions   Question[]
  teamAnswers TeamAnswers[]
  game        Game?         @relation(fields: [gameId], references: [id])
}

model Question {
  id            Int       @id @default(autoincrement())
  content       String
  correctAnswer String
  media         MediaType
  mediaLink     String
  Topic         Topic?    @relation(fields: [topicId], references: [id])
  topicId       Int?
  teamAnswer    TeamAnswers[]
}

model Team {
  id      Int           @id @default(autoincrement())
  name    String
  gameId  Int?
  game    Game?         @relation(fields: [gameId], references: [id])
  answers TeamAnswers[]
}

model TeamAnswers {
  id      Int    @id @default(autoincrement())
  topicId Int
  answer  String
  score   Float
  questionId Int
  teamId Int
  question Question @relation(fields: [questionId], references: [id])
  team    Team?  @relation(fields: [teamId], references: [id])
  topic   Topic  @relation(fields: [topicId], references: [id])
}

enum GameStatus {
  CREATION
  JOINING
  PLAYING
  END_ROUND
  EVALUATION
  SCORE_VIEWING
  END_QUIZ
}

enum MediaType {
  IMAGE
  VIDEO
  AUDIO
}
